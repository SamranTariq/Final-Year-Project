<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.owner"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="29" />

    <supports-screens
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />

    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE" />
    <uses-permission android:name="android.permission.REQUEST_DELETE_PACKAGES" />

    <uses-feature
        android:name="android.hardware.camera"
        android:required="true" />
    <uses-feature android:name="android.hardware.camera2.full" />
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />

    <uses-feature android:name="android.hardware.camera.front" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.SEND_SMS" /> <!-- Step 1: Add the following permission to the app -->
    <uses-permission android:name="android.permission.USE_BIOMETRIC" /> <!-- Step 2: This permission is depreciated in Android P -->
    <uses-permission android:name="android.permission.USE_FINGERPRINT" />
    <uses-permission android:name="android.permission.PROCESS_OUTGOING_CALLS" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />

    <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <application
        android:name="com.example.owner.App"
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme" >
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="AIzaSyBgtpHZMyOU1tEtUDxNu4psp5u3qmQON_I" />

        <activity android:name="com.example.owner.Track_Device" />
        <activity android:name="com.example.owner.TestOwner" >
        </activity>
        <activity android:name="com.example.owner.Locker.checklock" />
        <activity android:name="com.example.owner.Locker.LockExplain" />
        <activity android:name="com.example.owner.apppermiss2" />
        <activity android:name="com.example.owner.appintro2" />
        <activity android:name="com.example.owner.acforpass" />
        <activity android:name="com.example.owner.apintro" />
        <activity android:name="com.example.owner.appermiss" />
        <activity android:name="com.example.owner.signin" />
        <activity android:name="com.example.owner.signup" />
        <activity android:name="com.example.owner.UserImageActivity" />
        <activity android:name="com.example.owner.luncher" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service android:name="com.example.owner.DemoCamService" />

        <activity android:name="com.example.owner.Contact" />

        <service android:name="com.example.owner.mailservice" />
        <service android:name="com.example.owner.captureimage" />

        <activity android:name="com.example.owner.About" />
        <activity
            android:name="com.example.owner.FingerPrintAuthentication"
            android:screenOrientation="fullSensor" />
        <activity
            android:name="com.example.owner.Tabactivity"
            android:theme="@style/AppTheme.NoActionBar" >
        </activity>
        <activity android:name="com.example.owner.CameraView" />

        <service
            android:name="com.example.owner.loc"
            android:noHistory="true" />
        <service android:name="com.example.owner.SMS" />
        <service android:name="com.example.owner.Battery" />
        <service android:name="com.example.owner.wifiscan" />
        <service android:name="com.example.owner.factoryresetservice" />
        <service android:name="com.example.owner.fivehourfactryresetservice" />
        <service android:name="com.example.owner.hourscreenlockservice" />
        <service android:name="com.example.owner.hourdontlockservice" />
        <service android:name="com.example.owner.Test_Owner.GpsTracker" />

        <receiver
            android:name="com.example.owner.Myadmin"
            android:permission="android.permission.BIND_DEVICE_ADMIN" >
            <meta-data
                android:name="android.app.device_admin"
                android:resource="@xml/policies" />

            <intent-filter>
                <action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
                <action android:name="android.app.action.ACTION_DEVICE_ADMIN_DISABLE_REQUESTED" />
                <action android:name="android.app.action.ACTION_DEVICE_ADMIN_DISABLED" />
                <action android:name="android.app.action.DEVICE_ADMIN_ENABLED" />
                <action android:name="android.app.action.ACTION_PASSWORD_CHANGED" />
                <action android:name="android.app.action.ACTION_PASSWORD_FAILED" />
                <action android:name="android.app.action.ACTION_PASSWORD_SUCCEEDED" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.example.owner.FCMMessageReceiverService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.messaging.default_notification_channel_id"
                android:value="@string/default_notification_channel_id" />

            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service android:name="com.example.owner.screenlockservice" />
        <service android:name="com.example.owner.locationservice" />
        <service
            android:name="com.example.owner.MyFireBaseInstanceIDService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        <service android:name="com.example.owner.mobileringservice" />
        <service android:name="com.example.owner.DontLockService" />
        <service android:name="com.example.owner.GetBackCoreService" />

        <receiver
            android:name="com.example.owner.onboot"
            android:enabled="true"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver android:name="com.example.owner.screenunlock" />
        <receiver android:name="com.example.owner.hideapp" >
            <intent-filter>
                <action android:name="android.intent.action.NEW_OUTGOING_CALL" />
            </intent-filter>
        </receiver>

        <activity android:name="com.example.owner.Locker.activities.lock.GestureCreateActivity" />

        <receiver
            android:name="com.example.owner.Locker.receiver.LockRestarterBroadcastReceiver"
            android:enabled="true"
            android:exported="true"
            android:label="RestartServiceWhenStopped" />

        <activity
            android:name="com.example.owner.Locker.activities.pwd.CreatePwdActivity"
            android:label="Create Password"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.owner.Locker.activities.lock.GestureSelfUnlockActivity"
            android:label="Unlock"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.example.owner.Locker.activities.lock.GestureUnlockActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:launchMode="singleTask"
            android:noHistory="true"
            android:screenOrientation="portrait"
            android:theme="@style/unlock_activity_style" />

        <service android:name="com.example.owner.Locker.services.LoadAppListService" />
        <service android:name="com.example.owner.Locker.services.LockService" />

        <receiver android:name="com.example.owner.Locker.receiver.BootBroadcastReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />

        <activity
            android:name="com.gun0912.tedpermission.TedPermissionActivity"
            android:configChanges="mcc|mnc|locale|keyboard|keyboardHidden|screenLayout|fontScale|uiMode|orientation|screenSize|layoutDirection"
            android:screenOrientation="unspecified"
            android:theme="@style/Theme.Transparent.Permission" />
        <activity
            android:name="com.google.firebase.auth.internal.FederatedSignInActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleTask"
            android:permission="com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>
        <!--
             FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service> <!-- Needs to be explicitly declared on P+ -->
        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.example.owner.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
    </application>

</manifest>